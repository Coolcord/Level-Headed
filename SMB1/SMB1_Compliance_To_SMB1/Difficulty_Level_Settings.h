#ifndef DIFFICULTY_LEVEL_SETTINGS_H
#define DIFFICULTY_LEVEL_SETTINGS_H

struct Difficulty_Level_Settings {
    bool save;
    int autoScroll;
    int bulletTime;
    int hammerTime;
    int walkingHammerBros;
    int buzzyBeetlesReplaceLoneGoombas;
    int bridgeFlyingCheepCheeps;
    int bridgeLakitus;
    int bridgeOffscreenBulletBills;
    int castleFireBars;
    int castleFlyingCheepCheeps;
    int castleLakitus;
    int castleOffscreenBulletBills;
    int islandFlyingCheepCheeps;
    int islandLakitus;
    int islandOffscreenBulletBills;
    int undergroundFlyingCheepCheeps;
    int undergroundLakitus;
    int undergroundOffscreenBulletBills;
    int underwaterBloopers;
    int underwaterFlyingCheepCheeps;
    int underwaterLakitus;
    int underwaterSwimmingCheepCheeps;
    int standardOverworldFlyingCheepCheeps;
    int standardOverworldLakitus;
    int standardOverworldOffscreenBulletBills;
    int minimumEnemyDistance;
    int minimumUnderwaterEnemyDistance;
    bool noEnemies;
    bool unlimitedTime;
    int hammerTimeIntensity;
    int replaceCastleLoops;
    int maxLevelLength;
    int autoScrollChancePerLevel;
    int lakituSpawnChancePerLevel;
    int lakituRespawnSpeed;
    bool lakituThrowArc;
    int spinyEggBehavior;
    bool disableAllOtherEnemiesWhenALakituSpawns;
    bool disableAllOtherEnemiesWhenFlyingCheepCheepsSpawn;
    int spawnerPriority;
    bool superMarioOnDamage;
    int surfingLiftSpeed;
    int piranhaPlantType;
    int maxNumberOfPiranhaPlants;
    int basicEnemySpeed;
    int bowserFlameFrequency;
    int bulletBillFiringRate;
    int bulletBillSpeed;
    int enemyGroupSize;
    int enemyRevivalSpeed;
    int firebarLength;
    int longFirebarLength;
    int flyingCheepCheepJumpHeight;
    int hammerBrosThrowRate;
    bool speedyObjectsAndEnemies;
    bool piranhaPlantsOnFirstLevel;
};

#endif // DIFFICULTY_LEVEL_SETTINGS_H
